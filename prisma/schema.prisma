datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())

  accounts Account[]
  sessions Session[]
  events   Event[]
  orders   Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// TODO: Need a flag to indicate if the event is wedding or not (wedding, birthday, etc)
model Event {
  id                     String   @id @default(cuid())
  name                   String
  description            String?
  url                    String   @unique
  isShowGroomNameFirst   Boolean  @default(true)
  groomName              String
  groomInstagram         String?
  groomPhoto             String?
  groomParentsName       String?
  isShowGroomParentsName Boolean  @default(false)
  brideName              String
  brideInstagram         String?
  bridePhoto             String?
  brideParentsName       String?
  isShowBrideParentsName Boolean  @default(false)
  galleries              Json?    @db.Json
  published              Boolean  @default(false)
  date                   DateTime
  userId                 String
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  guests Guest[]
  orders Order[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum GuestType {
  FAMILY
  FRIEND
}

model Guest {
  id        String    @id @default(cuid())
  name      String
  email     String
  phone     String
  guestType GuestType @default(FRIEND)
  eventId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@index([eventId])
}

enum OrderStatus {
  UNPAID
  PAID
}

model Order {
  id        String      @id @default(cuid())
  status    OrderStatus @default(UNPAID)
  userId    String
  eventId   String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id])

  @@index([eventId])
  @@index([userId])
}
